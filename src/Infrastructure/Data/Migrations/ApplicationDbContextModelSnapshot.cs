// <auto-generated />
using System;
using MSt_Postcode_API.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSt_Postcode_API.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Generals.GeneralLookup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GeneralLookups");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Mappers.PostcodeClassificationMapper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostcodeClassificationMapper_PostcodeClassificationID")
                        .HasColumnType("int");

                    b.Property<int?>("PostcodeClassificationMapper_PostcodeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PostcodeClassificationMapper_PostcodeClassificationID");

                    b.HasIndex("PostcodeClassificationMapper_PostcodeID");

                    b.ToTable("PostcodeClassificationMapper");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Mappers.PostcodeSpecificationMapper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostcodeClassification_HighSecurityID")
                        .HasColumnType("int");

                    b.Property<int?>("PostcodeClassification_PCCategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("PostcodeClassification_SAndPID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PostcodeClassification_HighSecurityID");

                    b.HasIndex("PostcodeClassification_PCCategoryID");

                    b.HasIndex("PostcodeClassification_SAndPID");

                    b.ToTable("PostcodeSpecificationMapper");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Mappers.PostcodeSuburbMapper", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostcodeSuburbMapper_PostcodeID")
                        .HasColumnType("int");

                    b.Property<int?>("PostcodeSuburbMapper_SuburbID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PostcodeSuburbMapper_PostcodeID");

                    b.HasIndex("PostcodeSuburbMapper_SuburbID");

                    b.ToTable("PostcodeSuburbMapper");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Postcode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Postcode_SuburbID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Postcode_SuburbID");

                    b.ToTable("Postcodes");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.PostcodeClassification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PostcodeClassifications");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AbbreviatedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Vic");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("ISTerritory")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Victoria");

                    b.HasKey("ID");

                    b.ToTable("States");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Suburb", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Suburb_LocationTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("Suburb_StateID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Suburb_LocationTypeID");

                    b.HasIndex("Suburb_StateID");

                    b.ToTable("Suburbs");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Mappers.PostcodeClassificationMapper", b =>
                {
                    b.HasOne("MSt_Postcode_API.Domain.Entities.PostcodeClassification", "PostcodeClassificationMapper_PostcodeClassification")
                        .WithMany()
                        .HasForeignKey("PostcodeClassificationMapper_PostcodeClassificationID");

                    b.HasOne("MSt_Postcode_API.Domain.Entities.Postcode", "PostcodeClassificationMapper_Postcode")
                        .WithMany()
                        .HasForeignKey("PostcodeClassificationMapper_PostcodeID");

                    b.Navigation("PostcodeClassificationMapper_Postcode");

                    b.Navigation("PostcodeClassificationMapper_PostcodeClassification");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Mappers.PostcodeSpecificationMapper", b =>
                {
                    b.HasOne("MSt_Postcode_API.Domain.Entities.PostcodeClassification", "PostcodeClassification_HighSecurity")
                        .WithMany()
                        .HasForeignKey("PostcodeClassification_HighSecurityID");

                    b.HasOne("MSt_Postcode_API.Domain.Entities.PostcodeClassification", "PostcodeClassification_PCCategory")
                        .WithMany()
                        .HasForeignKey("PostcodeClassification_PCCategoryID");

                    b.HasOne("MSt_Postcode_API.Domain.Entities.PostcodeClassification", "PostcodeClassification_SAndP")
                        .WithMany()
                        .HasForeignKey("PostcodeClassification_SAndPID");

                    b.Navigation("PostcodeClassification_HighSecurity");

                    b.Navigation("PostcodeClassification_PCCategory");

                    b.Navigation("PostcodeClassification_SAndP");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Mappers.PostcodeSuburbMapper", b =>
                {
                    b.HasOne("MSt_Postcode_API.Domain.Entities.Postcode", "PostcodeSuburbMapper_Postcode")
                        .WithMany()
                        .HasForeignKey("PostcodeSuburbMapper_PostcodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSt_Postcode_API.Domain.Entities.Suburb", "PostcodeSuburbMapper_Suburb")
                        .WithMany()
                        .HasForeignKey("PostcodeSuburbMapper_SuburbID");

                    b.Navigation("PostcodeSuburbMapper_Postcode");

                    b.Navigation("PostcodeSuburbMapper_Suburb");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Postcode", b =>
                {
                    b.HasOne("MSt_Postcode_API.Domain.Entities.Suburb", "Postcode_Suburb")
                        .WithMany("Postcodes")
                        .HasForeignKey("Postcode_SuburbID");

                    b.Navigation("Postcode_Suburb");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Suburb", b =>
                {
                    b.HasOne("MSt_Postcode_API.Domain.Entities.Generals.GeneralLookup", "Suburb_LocationType")
                        .WithMany()
                        .HasForeignKey("Suburb_LocationTypeID");

                    b.HasOne("MSt_Postcode_API.Domain.Entities.State", "Suburb_State")
                        .WithMany("Suburbs")
                        .HasForeignKey("Suburb_StateID");

                    b.Navigation("Suburb_LocationType");

                    b.Navigation("Suburb_State");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.State", b =>
                {
                    b.Navigation("Suburbs");
                });

            modelBuilder.Entity("MSt_Postcode_API.Domain.Entities.Suburb", b =>
                {
                    b.Navigation("Postcodes");
                });
#pragma warning restore 612, 618
        }
    }
}
